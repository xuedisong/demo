package com.cloudhua.imageplatform.controller;

import com.cloudhua.imageplatform.domain.HttpEnv;
import com.cloudhua.imageplatform.domain.Test;
import com.cloudhua.imageplatform.persistence.TestMapper;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.List;

/**
 * Created by yangchao on 2017/8/14.
 */
@Controller
@RequestMapping("/test")
public class TestController {

    @Autowired
    private TestMapper testMapper;

    @RequestMapping(value = "/insert/{name}", method = RequestMethod.GET)
    @NoJsonData
    public void insert(@PathVariable(name = "name") String name, HttpServletRequest request, HttpServletResponse response) throws IOException {
        Test test = new Test();
        test.setName(name);
        testMapper.insert(test);
        response.getWriter().write(test.toString());
        response.getWriter().flush();
        response.getWriter().close();
    }

    @RequestMapping(value = "/select/{name}", method = RequestMethod.GET)
    public void select(@PathVariable(name = "name") String name, HttpServletRequest request, HttpServletResponse response) throws IOException {
        Test test = testMapper.getTestByName(name);
        response.getWriter().write(test.toString());
        response.getWriter().flush();
        response.getWriter().close();
    }

    @RequestMapping(value = "/all", method = RequestMethod.GET)
    public void getAll(HttpEnv httpEnv, HttpServletRequest request, HttpServletResponse response) throws IOException {
        List<Test> list = testMapper.getALl();
        ObjectMapper mapper = new ObjectMapper();
        String test = mapper.writeValueAsString(list);
        response.getWriter().write(test);
        response.getWriter().flush();
        response.getWriter().close();
    }
}
